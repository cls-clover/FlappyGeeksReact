// src/components/CharacterPage.js
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import styles from '../styles/CharacterPage.module.scss'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º SCSS-–º–æ–¥—É–ª—å

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
import geeksLogo from '../assets/img/geeksLogo.svg';
import geeksProLogo from '../assets/img/geeks_pro.svg';
import geekStudioLogo from '../assets/img/geekStudio.svg';

// –¶–µ–Ω—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –∫–æ–Ω—Å—Ç–∞–Ω—Ç, –µ—Å–ª–∏ –∏—Ö –º–Ω–æ–≥–æ)
const CHARACTER_PRICES = {
    'geek': 0,
    'senior': 300,
    'pro': 600
};

function CharacterPage() {
    const navigate = useNavigate();
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–æ–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const [userCoins, setUserCoins] = useState(0);
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "geek" –∫—É–ø–ª–µ–Ω)
    const [purchasedCharacters, setPurchasedCharacters] = useState(() => {
        try {
            const stored = localStorage.getItem('purchasedCharacters');
            return stored ? JSON.parse(stored) : ['geek'];
        } catch (error) {
            console.error("Failed to parse purchased characters from localStorage:", error);
            return ['geek']; // Fallback to default
        }
    });
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è (–∑–∞–º–µ–Ω–∞ alert)
    const [message, setMessage] = useState('');
    const [showMessage, setShowMessage] = useState(false);

    // useEffect –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    useEffect(() => {
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        document.body.classList.add(styles.loaded); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –∫–æ–∏–Ω—ã –∏–∑ localStorage
        const leaderboard = JSON.parse(localStorage.getItem("leaderboard")) || [];
        const currentUser = JSON.parse(localStorage.getItem("currentUser"));

        let currentCoins = 0;
        if (currentUser) {
            const userEntry = leaderboard.find(entry => entry.name === currentUser.name);
            if (userEntry) {
                currentCoins = userEntry.coins || 0;
            }
        }
        setUserCoins(currentCoins);

        // –û—á–∏—Å—Ç–∫–∞ –∫–ª–∞—Å—Å–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        return () => {
            document.body.classList.remove(styles.loaded);
        };
    }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

    // useEffect –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ localStorage –ø—Ä–∏ –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    useEffect(() => {
        localStorage.setItem('purchasedCharacters', JSON.stringify(purchasedCharacters));
    }, [purchasedCharacters]);

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    const showUserMessage = (msg) => {
        setMessage(msg);
        setShowMessage(true);
        const timer = setTimeout(() => {
            setShowMessage(false);
            setMessage('');
        }, 3000); // –°–æ–æ–±—â–µ–Ω–∏–µ –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        return () => clearTimeout(timer);
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
    const handleBackToMenu = () => {
        navigate('/'); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞/–ø–æ–∫—É–ø–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    const handleCharacterAction = (characterType) => {
        if (purchasedCharacters.includes(characterType)) {
            // –ï—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ —É–∂–µ –∫—É–ø–ª–µ–Ω - –≤—ã–±–∏—Ä–∞–µ–º –µ–≥–æ
            localStorage.setItem('selectedCharacter', characterType);
            navigate('/game'); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–≥—Ä—ã
        } else {
            // –ü–æ–∫—É–ø–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
            const price = CHARACTER_PRICES[characterType];
            if (userCoins >= price) {
                // –í—ã—á–∏—Ç–∞–µ–º –∫–æ–∏–Ω—ã
                const leaderboard = JSON.parse(localStorage.getItem("leaderboard")) || [];
                const currentUser = JSON.parse(localStorage.getItem("currentUser"));

                if (currentUser) {
                    const userEntry = leaderboard.find(entry => entry.name === currentUser.name);
                    if (userEntry) {
                        userEntry.coins = userCoins - price; // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–∏–Ω—ã –≤ –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        localStorage.setItem("leaderboard", JSON.stringify(leaderboard));
                        setUserCoins(userCoins - price); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–∏–Ω–æ–≤
                    }
                }

                // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –∫—É–ø–ª–µ–Ω–Ω—ã–µ
                setPurchasedCharacters(prev => [...prev, characterType]);

                showUserMessage(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ ${characterType}!`);
            } else {
                showUserMessage(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ ${characterType}. –í–∞–º –Ω—É–∂–Ω–æ ${price} –º–æ–Ω–µ—Ç.`);
            }
        }
    };

    // –î–∞–Ω–Ω—ã–µ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
    const charactersData = [
        { type: 'geek', name: 'Geeks', img: geeksLogo, description: '0 coins' }, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        { type: 'senior', name: 'GeeksPro', img: geeksProLogo, description: '300 coins' },
        { type: 'pro', name: 'GeeksStudio', img: geekStudioLogo, description: '600 coins' },
    ];

    return (
        <div className={styles.bodyBackground}>
            {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" */}
            <button id="backBtn" className={styles.backBtn} onClick={handleBackToMenu}>‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é</button>

            {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π */}
            {showMessage && (
                <div className={styles.messageBox}>
                    <p>{message}</p>
                </div>
            )}

            <div className={styles.centerCharacters}>
                <h1>üéÆ –í—ã–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</h1>
                {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                <div className={styles.coinsDisplay}>üí∞ {userCoins} coins</div>
                <hr className={styles.hr} /> {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ hr */}
                <div className={styles.characterGrid}>
                    {charactersData.map((char) => {
                        const isLocked = !purchasedCharacters.includes(char.type) && userCoins < CHARACTER_PRICES[char.type];
                        const isPurchased = purchasedCharacters.includes(char.type);
                        const buttonText = isPurchased ? '–í—ã–±—Ä–∞—Ç—å' : (isLocked ? '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ' : `–ö—É–ø–∏—Ç—å –∑–∞ ${CHARACTER_PRICES[char.type]} üí∞`);

                        return (
                            <div
                                key={char.type}
                                className={`${styles.characterItem} ${isLocked ? styles.locked : ''}`}
                                data-character={char.type}
                            >
                                <img src={char.img} alt={char.name} />
                                <h3>{char.name}</h3>
                                <p className={styles.cardPrice}>{char.description}</p>
                                <div className={styles.characterBtnDiv}>
                                    <button
                                        className={styles.selectBtn}
                                        onClick={() => handleCharacterAction(char.type)}
                                        disabled={isLocked && !isPurchased} // –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞, –µ—Å–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –∏ –Ω–µ –∫—É–ø–ª–µ–Ω–∞
                                    >
                                        {buttonText}
                                    </button>
                                </div>
                            </div>
                        );
                    })}
                </div>
            </div>
        </div>
    );
}

export default CharacterPage;
